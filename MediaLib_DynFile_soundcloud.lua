local a=medialib.load("oop")local b=a.class("SoundcloudService","BASSService")b.identifier="soundcloud"local c={"^https?://www.soundcloud.com/([A-Za-z0-9_%-]+/[A-Za-z0-9_%-]+)/?.*$","^https?://soundcloud.com/([A-Za-z0-9_%-]+/[A-Za-z0-9_%-]+)/?.*$"}local d="^https?://api.soundcloud.com/tracks/(%d+)"function b:parseUrl(e)for f,g in pairs(c)do local h=string.match(e,g)if h then return{path=h}end end;local i=string.match(e,d)if i then return{id=i}end end;function b:isValidUrl(e)return self:parseUrl(e)~=nil end;function b:resolveUrl(e,j)local k=medialib.SOUNDCLOUD_API_KEY;if not k then ErrorNoHalt("SoundCloud error: Missing SoundCloud API key")return end;if type(k)=="table"then k=table.Random(k)end;local l=self:parseUrl(e)if l.id then j(string.format("https://api.soundcloud.com/tracks/%s/stream?client_id=%s",l.id,k),{})else http.Fetch(string.format("https://api.soundcloud.com/resolve.json?url=http://soundcloud.com/%s&client_id=%s",l.path,k),function(m)local n=util.JSONToTable(m)if not n then ErrorNoHalt("Failed to retrieve SC track id for "..l.path..": empty JSON")return end;local i=n.id;j(string.format("https://api.soundcloud.com/tracks/%s/stream?client_id=%s",i,k),{})end)end end;function b:directQuery(e,j)local k=medialib.SOUNDCLOUD_API_KEY;if not k then j("Missing SoundCloud API key")return end;if type(k)=="table"then k=table.Random(k)end;local l=self:parseUrl(e)local o;if l.path then o=string.format("https://api.soundcloud.com/resolve.json?url=http://soundcloud.com/%s&client_id=%s",l.path,k)else o=string.format("https://api.soundcloud.com/tracks/%s?client_id=%s",l.id,k)end;http.Fetch(o,function(p,q)if q==0 then j("http body size = 0")return end;local r=util.JSONToTable(p)if r.errors then local s=r.errors[1].error_message or"error"local t=s;if string.StartWith(s,"404")then t="Invalid id"end;j(t)return end;j(nil,{title=r.title,duration=tonumber(r.duration)/1000})end,function(u)j("HTTP: "..u)end)end;return b
